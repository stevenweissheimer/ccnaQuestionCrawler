<% var maxAnswers = maxAnswers || 0; %>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <title>Question Form</title>

    <script>
        // Die JSON-Daten
        const jsonData = {
            "courses": []
        };

        async function fetchCourses() {
            try {
                const response = await fetch('/courses');
                const data = await response.json();
                jsonData.courses = data.courses;
                updateCourseDropdown(); // Funktion zum Aktualisieren des Kurs-Dropdowns aufrufen
            } catch (error) {
                console.error('Fehler beim Abrufen der Kursdaten:', error);
            }
        }

        // Kursdaten beim Laden der Seite abrufen
        fetchCourses();

        function updateCourseDropdown() {
            const courseDropdown = document.getElementById('courseDropdown');
            courseDropdown.innerHTML = '<option value="">Bitte auswählen</option>';
            jsonData.courses.forEach(course => {
                const option = document.createElement('option');
                option.value = course.courseId;
                option.textContent = course.name;
                courseDropdown.appendChild(option);
            });
        }

        function updateSubCourses() {
            const courseDropdown = document.getElementById('courseDropdown');
            const subCourseDropdown = document.getElementById('subCourseDropdown');

            const selectedCourseId = courseDropdown.value;
            const selectedCourse = jsonData.courses.find(course => course.courseId === parseInt(selectedCourseId));

            const subCourses = selectedCourse ? selectedCourse.subcourses : [];

            subCourseDropdown.innerHTML = '<option value="">Bitte auswählen</option>';
            subCourses.forEach(subCourse => {
                const option = document.createElement('option');
                option.value = subCourse.subCourseId;
                option.textContent = subCourse.name;
                subCourseDropdown.appendChild(option);
            });

            // Reset Kategorie-Dropdown
            updateCategories();
        }

        function updateCategories() {
            const subCourseDropdown = document.getElementById('subCourseDropdown');
            const categoryDropdown = document.getElementById('categoryDropdown');

            const selectedSubCourseId = subCourseDropdown.value;
            const selectedSubCourse = jsonData.courses.flatMap(course => course.subcourses).find(subCourse => subCourse
                .subCourseId === parseInt(selectedSubCourseId));
            const categories = selectedSubCourse ? selectedSubCourse.categories : [];

            categoryDropdown.innerHTML = '<option value="">Bitte auswählen</option>';
            categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category.categoryId;
                option.textContent = category.name;
                categoryDropdown.appendChild(option);
            });
        }
    </script>

</head>

<body class="container mt-5">
    <h1 class="mb-4">Questions</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Course</th>
                <th>SubCourse</th>
                <th>Category</th>
                <th>Question</th>
                <% for (let i = 1; i <= maxAnswers; i++) { %>
                <th>Answer <%= i %></th>
                <% } %>
            </tr>
        </thead>
        <tbody>
            <% questions.forEach(question => { %>
            <tr>
                <td><%= question.courseId %></td>
                <td><%= question.subCourseId %></td>
                <td><%= question.categoryId %></td>
                <td><%= question.question %></td>
                <% question.answers.forEach(answer => { %>
                <td><%= answer.title %> - <%= answer.correct ? 'Correct' : 'Incorrect' %></td>
                <% }) %>
                <% for (let i = question.answers.length + 1; i <= maxAnswers; i++) { %>
                <td></td>
                <% } %>
            </tr>
            <% }) %>
        </tbody>
    </table>


    <h2 class="mt-5">Add a New Question</h2>
    <form action="/addQuestion" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <label for="courseDropdown">Kurs:</label>
            <select id="courseDropdown" onchange="updateSubCourses()" name="courseId" class="form-control">
                <option value="">Bitte auswählen</option>
                <!-- Kurse dynamisch hinzufügen -->
            </select>
        </div>

        <!-- Subcourse-Dropdown -->
        <div class="form-group">
            <label for="subCourseDropdown">Subcourse:</label>
            <select id="subCourseDropdown" onchange="updateCategories()" name="subCourseId" class="form-control">
                <option value="">Bitte auswählen</option>
            </select>
        </div>

        <!-- Kategorie-Dropdown -->
        <div class="form-group">
            <label for="categoryDropdown">Kategorie:</label>
            <select id="categoryDropdown" name="categoryId" class="form-control">
                <option value="">Bitte auswählen</option>
            </select>
        </div>

        <div class="form-group">
            <label for="question">Question:</label>
            <input type="text" name="question" required class="form-control">
        </div>

        <div class="form-group">
            <label for="questionText">QuestionText:</label>
            <textarea name="questionText" class="form-control"></textarea>
        </div>

        <div class="form-group">
            <label for="answersDescription">answersDescription:</label>
            <textarea name="answersDescription" class="form-control"></textarea>
        </div>

        <div class="form-group">
            <label for="questionImage">Question Image:</label>
            <input type="file" name="questionImage" class="form-control-file">
        </div>

        <h3 class="mt-4">Answers</h3>
        <% for(let i=0; i<6; i++) { %>
        <div class="form-group">
            <label for="answer<%= i+1 %>">Answer <%= i+1 %>:</label>
            <input type="text" name="answers[<%= i %>][title]" class="form-control">
            <div class="form-check">
                <input type="checkbox" name="answers[<%= i %>][correct]" class="form-check-input"> Correct
            </div>
            <label for="answerImage<%= i+1 %>">Answer <%= i+1 %> Image:</label>
            <input type="file" name="answers[<%= i %>][image]" class="form-control-file"></br>
        </div>
        <% } %>

        <button type="submit" class="btn btn-primary">Add Question</button>
    </form>
</body>
<script>
    // Funktion zum Setzen des Werts im Session Storage und Aktualisieren des Dropdowns
    function setAndSelectDropdownValue(dropdownId, value) {
    sessionStorage.setItem(dropdownId, value);
    document.getElementById(dropdownId).value = value;
    }

    // Update-Funktion für Kurs-Dropdown
    function updateCourseDropdown() {
    const courseDropdown = document.getElementById('courseDropdown');
    courseDropdown.innerHTML = '<option value="">Bitte auswählen</option>';

    jsonData.courses.forEach(course => {
    const option = document.createElement('option');
    option.value = course.courseId;
    option.textContent = course.name;
    courseDropdown.appendChild(option);
    });

    // Auswahl aus dem Session Storage abrufen und Dropdown aktualisieren
    const selectedCourse = sessionStorage.getItem('selectedCourse');
    if (selectedCourse) {
    setAndSelectDropdownValue('courseDropdown', selectedCourse);
    updateSubCourses(); // Aktualisiere die Subkurse basierend auf dem ausgewählten Kurs
    }
    }

    // Update-Funktion für Subkurs-Dropdown
    function updateSubCourses() {
    const courseDropdown = document.getElementById('courseDropdown');
    const subCourseDropdown = document.getElementById('subCourseDropdown');

    const selectedCourseId = courseDropdown.value;
    const selectedCourse = jsonData.courses.find(course => course.courseId === parseInt(selectedCourseId));

    const subCourses = selectedCourse ? selectedCourse.subcourses : [];

    subCourseDropdown.innerHTML = '<option value="">Bitte auswählen</option>';
    subCourses.forEach(subCourse => {
    const option = document.createElement('option');
    option.value = subCourse.subCourseId;
    option.textContent = subCourse.name;
    subCourseDropdown.appendChild(option);
    });

    // Auswahl aus dem Session Storage abrufen und Dropdown aktualisieren
    const selectedSubCourse = sessionStorage.getItem('selectedSubCourse');
    if (selectedSubCourse) {
    setAndSelectDropdownValue('subCourseDropdown', selectedSubCourse);
    updateCategories(); // Aktualisiere die Kategorien basierend auf dem ausgewählten Subkurs
    }
    }

    // Update-Funktion für Kategorie-Dropdown
    function updateCategories() {
    const subCourseDropdown = document.getElementById('subCourseDropdown');
    const categoryDropdown = document.getElementById('categoryDropdown');

    const selectedSubCourseId = subCourseDropdown.value;
    const selectedSubCourse = jsonData.courses.flatMap(course => course.subcourses).find(subCourse =>
    subCourse.subCourseId === parseInt(selectedSubCourseId));
    const categories = selectedSubCourse ? selectedSubCourse.categories : [];

    categoryDropdown.innerHTML = '<option value="">Bitte auswählen</option>';
    categories.forEach(category => {
    const option = document.createElement('option');
    option.value = category.categoryId;
    option.textContent = category.name;
    categoryDropdown.appendChild(option);
    });

    // Auswahl aus dem Session Storage abrufen und Dropdown aktualisieren
    const selectedCategory = sessionStorage.getItem('selectedCategory');
    if (selectedCategory) {
    setAndSelectDropdownValue('categoryDropdown', selectedCategory);
    }
    }

    // Event Listener für Änderungen an den Dropdowns
    document.getElementById('courseDropdown').addEventListener('change', function () {
    setAndSelectDropdownValue('selectedCourse', this.value);
    updateSubCourses();
    });

    document.getElementById('subCourseDropdown').addEventListener('change', function () {
    setAndSelectDropdownValue('selectedSubCourse', this.value);
    updateCategories();
    });

    document.getElementById('categoryDropdown').addEventListener('change', function () {
    setAndSelectDropdownValue('selectedCategory', this.value);
    });
</script>

</html>